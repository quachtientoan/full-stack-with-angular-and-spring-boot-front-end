{"version":3,"file":"primeng-inputtextarea.js","sources":["ng:/primeng/inputtextarea/inputtextarea.ts","ng:/primeng/inputtextarea/primeng-inputtextarea.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output,DoCheck,EventEmitter,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputTextarea]',\n    host: {\n        '[class.p-inputtextarea]': 'true',\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled',\n        '[class.p-inputtextarea-resizable]': 'autoResize'\n    }\n})\nexport class InputTextarea implements DoCheck {\n    \n    @Input() autoResize: boolean;\n    \n    @Output() onResize: EventEmitter<any> = new EventEmitter();\n        \n    filled: boolean;\n\n    cachedScrollHeight:number;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n        \n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n    \n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    }\n    \n    @HostListener('focus', ['$event'])\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    @HostListener('blur', ['$event'])\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event||{});\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputTextarea],\n    declarations: [InputTextarea]\n})\nexport class InputTextareaModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}